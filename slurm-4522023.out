Number of nodes: 4032
Number of edges: 510048
Node features:
{}
Edge features:
defaultdict(<class 'dict'>, {})
Graph structure:
Graph(num_nodes={'node': 4032},
      num_edges={('node', 'pp', 'node'): 4032, ('node', 'ss', 'node'): 129024, ('node', 'st', 'node'): 127008, ('node', 'ts', 'node'): 124992, ('node', 'tt', 'node'): 124992},
      metagraph=[('node', 'node', 'pp'), ('node', 'node', 'ss'), ('node', 'node', 'st'), ('node', 'node', 'ts'), ('node', 'node', 'tt')])
('node', 'pp', 'node')
SparseMatrix(indices=tensor([[   0,    1,    2,  ..., 4029, 4030, 4031],
                             [  63,  126,  189,  ..., 3842, 3905, 3968]]),
             values=tensor([1., 1., 1.,  ..., 1., 1., 1.]),
             shape=(4032, 4032), nnz=4032)
('node', 'ss', 'node')
SparseMatrix(indices=tensor([[   0,    0,    0,  ..., 4030, 4030, 4031],
                             [   0,    1,    2,  ..., 4030, 4031, 4031]]),
             values=tensor([1., 1., 1.,  ..., 1., 1., 1.]),
             shape=(4032, 4032), nnz=129024)
('node', 'st', 'node')
SparseMatrix(indices=tensor([[   0,    0,    0,  ..., 3966, 3967, 3968],
                             [  63,  126,  189,  ..., 4031, 4031, 4031]]),
             values=tensor([1., 1., 1.,  ..., 1., 1., 1.]),
             shape=(4032, 4032), nnz=127008)
('node', 'ts', 'node')
SparseMatrix(indices=tensor([[   0,    0,    0,  ..., 3968, 3968, 3968],
                             [  64,   65,   66,  ..., 4028, 4029, 4030]]),
             values=tensor([1., 1., 1.,  ..., 1., 1., 1.]),
             shape=(4032, 4032), nnz=124992)
('node', 'tt', 'node')
SparseMatrix(indices=tensor([[   0,    0,    0,  ..., 3965, 3966, 3967],
                             [ 127,  190,  253,  ..., 4028, 4029, 4030]]),
             values=tensor([1., 1., 1.,  ..., 1., 1., 1.]),
             shape=(4032, 4032), nnz=124992)
Number of nodes: 4032
Number of edges: 510048
Node features:
{}
Edge features:
defaultdict(<class 'dict'>, {})
Graph structure:
Graph(num_nodes={'node': 4032},
      num_edges={('node', 'pp', 'node'): 4032, ('node', 'ss', 'node'): 129024, ('node', 'st', 'node'): 127008, ('node', 'ts', 'node'): 124992, ('node', 'tt', 'node'): 124992},
      metagraph=[('node', 'node', 'pp'), ('node', 'node', 'ss'), ('node', 'node', 'st'), ('node', 'node', 'ts'), ('node', 'node', 'tt')])
('node', 'pp', 'node')
SparseMatrix(indices=tensor([[   0,    1,    2,  ..., 4029, 4030, 4031],
                             [  63,  126,  189,  ..., 3842, 3905, 3968]]),
             values=tensor([1., 1., 1.,  ..., 1., 1., 1.]),
             shape=(4032, 4032), nnz=4032)
('node', 'ss', 'node')
SparseMatrix(indices=tensor([[   0,    0,    0,  ..., 4030, 4030, 4031],
                             [   0,    1,    2,  ..., 4030, 4031, 4031]]),
             values=tensor([1., 1., 1.,  ..., 1., 1., 1.]),
             shape=(4032, 4032), nnz=129024)
('node', 'st', 'node')
SparseMatrix(indices=tensor([[   0,    0,    0,  ..., 3966, 3967, 3968],
                             [  63,  126,  189,  ..., 4031, 4031, 4031]]),
             values=tensor([1., 1., 1.,  ..., 1., 1., 1.]),
             shape=(4032, 4032), nnz=127008)
('node', 'ts', 'node')
SparseMatrix(indices=tensor([[   0,    0,    0,  ..., 3968, 3968, 3968],
                             [  64,   65,   66,  ..., 4028, 4029, 4030]]),
             values=tensor([1., 1., 1.,  ..., 1., 1., 1.]),
             shape=(4032, 4032), nnz=124992)
('node', 'tt', 'node')
SparseMatrix(indices=tensor([[   0,    0,    0,  ..., 3965, 3966, 3967],
                             [ 127,  190,  253,  ..., 4028, 4029, 4030]]),
             values=tensor([1., 1., 1.,  ..., 1., 1., 1.]),
             shape=(4032, 4032), nnz=124992)
device = cuda
Traceback (most recent call last):
  File "/project/p_gnn001/code/tsp/tsp/train2.py", line 322, in <module>
    main()
  File "/project/p_gnn001/code/tsp/tsp/train2.py", line 315, in main
    val_loss = run(args)
               ^^^^^^^^^
  File "/project/p_gnn001/code/tsp/tsp/train2.py", line 165, in run
    _, feat_dim = train_set[0].ndata['weight'].shape
                  ~~~~~~~~~^^^
  File "/project/p_gnn001/code/tsp/tsp/gnngls/datasets.py", line 183, in __getitem__
    H = self.get_scaled_features(G)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/project/p_gnn001/code/tsp/tsp/gnngls/datasets.py", line 190, in get_scaled_features
    for i in range(self.G.number_of_nodes()):
                   ^^^^^^
AttributeError: 'TSPDataset' object has no attribute 'G'
