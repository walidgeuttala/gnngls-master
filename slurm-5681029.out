tensor(indices=tensor([[5, 0, 5, 5, 0, 3, 2, 2, 9, 8, 0, 9, 2, 6, 2, 2, 7, 3, 8,
                        1],
                       [9, 4, 1, 3, 8, 9, 6, 2, 5, 6, 7, 1, 9, 8, 1, 6, 8, 1, 4,
                        0]]),
       values=tensor([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
                      1., 1., 1., 1., 1., 1.]),
       size=(10, 10), nnz=20, layout=torch.sparse_coo)
Traceback (most recent call last):
  File "/project/p_gnn001/code/tsp/tsp/models_test.py", line 149, in <module>
    output = model(adjs, inputs)
             ^^^^^^^^^^^^^^^^^^^
  File "/home/p_gnngw/miniconda3/envs/cuda118/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/p_gnngw/miniconda3/envs/cuda118/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/project/p_gnn001/code/tsp/tsp/models_test.py", line 112, in forward
    inputs = self.embed_layer(inputs)
             ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/p_gnngw/miniconda3/envs/cuda118/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/p_gnngw/miniconda3/envs/cuda118/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/project/p_gnn001/code/tsp/tsp/models_test.py", line 94, in forward
    return self.linears[1](h) + x
           ~~~~~~~~~~~~~~~~~~~^~~
RuntimeError: The size of tensor a (16) must match the size of tensor b (10) at non-singleton dimension 1
